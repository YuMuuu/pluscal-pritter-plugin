// Generated from Pluscal.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class PluscalLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly Definitions = 4;
	public static readonly Macro = 5;
	public static readonly Procedure = 6;
	public static readonly Process = 7;
	public static readonly VarDecls = 8;
	public static readonly VarDecl = 9;
	public static readonly PVarDecls = 10;
	public static readonly PVarDecl = 11;
	public static readonly AlgorithmBody = 12;
	public static readonly Stmt = 13;
	public static readonly UnlabeledStmt = 14;
	public static readonly Assign = 15;
	public static readonly LHS = 16;
	public static readonly If = 17;
	public static readonly While = 18;
	public static readonly Either = 19;
	public static readonly With = 20;
	public static readonly Await = 21;
	public static readonly Print = 22;
	public static readonly Assert = 23;
	public static readonly Skip = 24;
	public static readonly Return = 25;
	public static readonly Goto = 26;
	public static readonly Call = 27;
	public static readonly MacroCall = 28;
	public static readonly Variable = 29;
	public static readonly Field = 30;
	public static readonly Name = 31;
	public static readonly Label = 32;
	public static readonly Expr = 33;
	public static readonly Defs = 34;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'--algorithm'", 
                                                            "'--fair algorithm'", 
                                                            "'end algorithm'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             "Definitions", 
                                                             "Macro", "Procedure", 
                                                             "Process", 
                                                             "VarDecls", 
                                                             "VarDecl", 
                                                             "PVarDecls", 
                                                             "PVarDecl", 
                                                             "AlgorithmBody", 
                                                             "Stmt", "UnlabeledStmt", 
                                                             "Assign", "LHS", 
                                                             "If", "While", 
                                                             "Either", "With", 
                                                             "Await", "Print", 
                                                             "Assert", "Skip", 
                                                             "Return", "Goto", 
                                                             "Call", "MacroCall", 
                                                             "Variable", 
                                                             "Field", "Name", 
                                                             "Label", "Expr", 
                                                             "Defs" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "Definitions", "Macro", "Procedure", "Process", 
		"VarDecls", "VarDecl", "PVarDecls", "PVarDecl", "AlgorithmBody", "Stmt", 
		"UnlabeledStmt", "Assign", "LHS", "If", "While", "Either", "With", "Await", 
		"Print", "Assert", "Skip", "Return", "Goto", "Call", "MacroCall", "Variable", 
		"Field", "Name", "Label", "Expr", "Defs",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, PluscalLexer._ATN, PluscalLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Pluscal.g4"; }

	public get literalNames(): (string | null)[] { return PluscalLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return PluscalLexer.symbolicNames; }
	public get ruleNames(): string[] { return PluscalLexer.ruleNames; }

	public get serializedATN(): number[] { return PluscalLexer._serializedATN; }

	public get channelNames(): string[] { return PluscalLexer.channelNames; }

	public get modeNames(): string[] { return PluscalLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,34,660,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
	1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
	1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
	1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,133,
	8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,5,4,145,8,4,10,4,12,4,148,9,
	4,3,4,150,8,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,164,8,
	4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,180,8,5,10,
	5,12,5,183,9,5,3,5,185,8,5,1,5,3,5,188,8,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
	1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,205,8,5,1,6,1,6,1,6,1,6,1,6,1,6,3,6,
	213,8,6,3,6,215,8,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
	3,6,230,8,6,1,6,1,6,3,6,234,8,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
	1,6,1,6,1,6,1,6,3,6,250,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
	1,7,1,7,1,7,1,7,1,7,1,7,3,7,269,8,7,1,7,4,7,272,8,7,11,7,12,7,273,1,8,1,
	8,1,8,1,8,1,8,3,8,281,8,8,1,8,3,8,284,8,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
	9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,305,8,9,1,9,1,9,4,9,309,
	8,9,11,9,12,9,310,1,10,1,10,1,10,3,10,316,8,10,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,4,11,325,8,11,11,11,12,11,326,1,12,1,12,1,12,3,12,332,8,12,3,
	12,334,8,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
	1,13,1,13,1,13,3,13,351,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
	14,1,14,1,14,1,14,1,14,1,14,5,14,367,8,14,10,14,12,14,370,9,14,1,14,1,14,
	1,15,1,15,1,15,1,15,1,15,5,15,379,8,15,10,15,12,15,382,9,15,1,15,1,15,1,
	15,1,15,5,15,388,8,15,10,15,12,15,391,9,15,1,16,1,16,1,16,1,16,1,16,1,16,
	1,16,1,16,1,16,1,16,4,16,403,8,16,11,16,12,16,404,1,16,1,16,1,16,1,16,1,
	16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,4,16,420,8,16,11,16,12,16,421,
	5,16,424,8,16,10,16,12,16,427,9,16,1,16,1,16,1,16,1,16,1,16,1,16,4,16,435,
	8,16,11,16,12,16,436,3,16,439,8,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
	16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,4,17,461,
	8,17,11,17,12,17,462,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
	1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,4,18,488,
	8,18,11,18,12,18,489,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
	1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,514,8,
	19,1,19,1,19,1,19,4,19,519,8,19,11,19,12,19,520,1,19,1,19,1,19,1,19,4,19,
	527,8,19,11,19,12,19,528,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,
	19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,551,8,20,1,20,
	1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,
	22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
	1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
	25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,5,27,610,
	8,27,10,27,12,27,613,9,27,3,27,615,8,27,1,27,1,27,1,28,1,28,5,28,621,8,
	28,10,28,12,28,624,9,28,1,29,1,29,5,29,628,8,29,10,29,12,29,631,9,29,1,
	30,1,30,5,30,635,8,30,10,30,12,30,638,9,30,1,31,1,31,5,31,642,8,31,10,31,
	12,31,645,9,31,1,32,1,32,5,32,649,8,32,10,32,12,32,652,9,32,1,33,1,33,5,
	33,656,8,33,10,33,12,33,659,9,33,0,0,34,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
	8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
	41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
	65,33,67,34,1,0,4,2,0,44,44,59,59,2,0,43,43,45,45,3,0,65,90,95,95,97,122,
	4,0,48,57,65,90,95,95,97,122,718,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
	7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
	0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
	1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
	0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
	1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
	0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,1,69,1,0,0,0,3,81,1,0,0,0,5,98,
	1,0,0,0,7,112,1,0,0,0,9,134,1,0,0,0,11,165,1,0,0,0,13,214,1,0,0,0,15,268,
	1,0,0,0,17,275,1,0,0,0,19,304,1,0,0,0,21,312,1,0,0,0,23,317,1,0,0,0,25,
	333,1,0,0,0,27,350,1,0,0,0,29,352,1,0,0,0,31,373,1,0,0,0,33,392,1,0,0,0,
	35,449,1,0,0,0,37,476,1,0,0,0,39,503,1,0,0,0,41,550,1,0,0,0,43,555,1,0,
	0,0,45,564,1,0,0,0,47,574,1,0,0,0,49,581,1,0,0,0,51,590,1,0,0,0,53,598,
	1,0,0,0,55,605,1,0,0,0,57,618,1,0,0,0,59,625,1,0,0,0,61,632,1,0,0,0,63,
	639,1,0,0,0,65,646,1,0,0,0,67,653,1,0,0,0,69,70,5,45,0,0,70,71,5,45,0,0,
	71,72,5,97,0,0,72,73,5,108,0,0,73,74,5,103,0,0,74,75,5,111,0,0,75,76,5,
	114,0,0,76,77,5,105,0,0,77,78,5,116,0,0,78,79,5,104,0,0,79,80,5,109,0,0,
	80,2,1,0,0,0,81,82,5,45,0,0,82,83,5,45,0,0,83,84,5,102,0,0,84,85,5,97,0,
	0,85,86,5,105,0,0,86,87,5,114,0,0,87,88,5,32,0,0,88,89,5,97,0,0,89,90,5,
	108,0,0,90,91,5,103,0,0,91,92,5,111,0,0,92,93,5,114,0,0,93,94,5,105,0,0,
	94,95,5,116,0,0,95,96,5,104,0,0,96,97,5,109,0,0,97,4,1,0,0,0,98,99,5,101,
	0,0,99,100,5,110,0,0,100,101,5,100,0,0,101,102,5,32,0,0,102,103,5,97,0,
	0,103,104,5,108,0,0,104,105,5,103,0,0,105,106,5,111,0,0,106,107,5,114,0,
	0,107,108,5,105,0,0,108,109,5,116,0,0,109,110,5,104,0,0,110,111,5,109,0,
	0,111,6,1,0,0,0,112,113,5,100,0,0,113,114,5,101,0,0,114,115,5,102,0,0,115,
	116,5,105,0,0,116,117,5,110,0,0,117,118,5,101,0,0,118,119,1,0,0,0,119,120,
	3,67,33,0,120,121,5,101,0,0,121,122,5,110,0,0,122,123,5,100,0,0,123,124,
	5,32,0,0,124,125,5,100,0,0,125,126,5,101,0,0,126,127,5,102,0,0,127,128,
	5,105,0,0,128,129,5,110,0,0,129,130,5,101,0,0,130,132,1,0,0,0,131,133,5,
	59,0,0,132,131,1,0,0,0,132,133,1,0,0,0,133,8,1,0,0,0,134,135,5,109,0,0,
	135,136,5,97,0,0,136,137,5,99,0,0,137,138,5,114,0,0,138,139,5,111,0,0,139,
	140,1,0,0,0,140,149,3,61,30,0,141,146,3,57,28,0,142,143,5,44,0,0,143,145,
	3,57,28,0,144,142,1,0,0,0,145,148,1,0,0,0,146,144,1,0,0,0,146,147,1,0,0,
	0,147,150,1,0,0,0,148,146,1,0,0,0,149,141,1,0,0,0,149,150,1,0,0,0,150,151,
	1,0,0,0,151,152,3,23,11,0,152,153,5,101,0,0,153,154,5,110,0,0,154,155,5,
	100,0,0,155,156,5,32,0,0,156,157,5,77,0,0,157,158,5,97,0,0,158,159,5,99,
	0,0,159,160,5,114,0,0,160,161,5,111,0,0,161,163,1,0,0,0,162,164,5,59,0,
	0,163,162,1,0,0,0,163,164,1,0,0,0,164,10,1,0,0,0,165,166,5,112,0,0,166,
	167,5,114,0,0,167,168,5,111,0,0,168,169,5,99,0,0,169,170,5,101,0,0,170,
	171,5,100,0,0,171,172,5,117,0,0,172,173,5,114,0,0,173,174,5,101,0,0,174,
	175,1,0,0,0,175,184,3,61,30,0,176,181,3,21,10,0,177,178,5,44,0,0,178,180,
	3,21,10,0,179,177,1,0,0,0,180,183,1,0,0,0,181,179,1,0,0,0,181,182,1,0,0,
	0,182,185,1,0,0,0,183,181,1,0,0,0,184,176,1,0,0,0,184,185,1,0,0,0,185,187,
	1,0,0,0,186,188,3,19,9,0,187,186,1,0,0,0,187,188,1,0,0,0,188,189,1,0,0,
	0,189,190,5,101,0,0,190,191,5,110,0,0,191,192,5,100,0,0,192,193,5,32,0,
	0,193,194,5,112,0,0,194,195,5,114,0,0,195,196,5,111,0,0,196,197,5,99,0,
	0,197,198,5,101,0,0,198,199,5,100,0,0,199,200,5,117,0,0,200,201,5,114,0,
	0,201,202,5,101,0,0,202,204,1,0,0,0,203,205,5,59,0,0,204,203,1,0,0,0,204,
	205,1,0,0,0,205,12,1,0,0,0,206,207,5,102,0,0,207,208,5,97,0,0,208,209,5,
	105,0,0,209,210,5,114,0,0,210,212,1,0,0,0,211,213,5,43,0,0,212,211,1,0,
	0,0,212,213,1,0,0,0,213,215,1,0,0,0,214,206,1,0,0,0,214,215,1,0,0,0,215,
	216,1,0,0,0,216,217,5,112,0,0,217,218,5,114,0,0,218,219,5,111,0,0,219,220,
	5,99,0,0,220,221,5,101,0,0,221,222,5,115,0,0,222,223,5,115,0,0,223,224,
	1,0,0,0,224,229,3,61,30,0,225,230,5,61,0,0,226,227,5,92,0,0,227,228,5,105,
	0,0,228,230,5,110,0,0,229,225,1,0,0,0,229,226,1,0,0,0,230,231,1,0,0,0,231,
	233,3,65,32,0,232,234,3,15,7,0,233,232,1,0,0,0,233,234,1,0,0,0,234,235,
	1,0,0,0,235,236,3,23,11,0,236,237,5,101,0,0,237,238,5,110,0,0,238,239,5,
	100,0,0,239,240,5,32,0,0,240,241,5,112,0,0,241,242,5,114,0,0,242,243,5,
	111,0,0,243,244,5,99,0,0,244,245,5,101,0,0,245,246,5,115,0,0,246,247,5,
	115,0,0,247,249,1,0,0,0,248,250,5,59,0,0,249,248,1,0,0,0,249,250,1,0,0,
	0,250,14,1,0,0,0,251,252,5,118,0,0,252,253,5,97,0,0,253,254,5,114,0,0,254,
	255,5,105,0,0,255,256,5,97,0,0,256,257,5,98,0,0,257,258,5,108,0,0,258,269,
	5,101,0,0,259,260,5,118,0,0,260,261,5,97,0,0,261,262,5,114,0,0,262,263,
	5,105,0,0,263,264,5,97,0,0,264,265,5,98,0,0,265,266,5,108,0,0,266,267,5,
	101,0,0,267,269,5,115,0,0,268,251,1,0,0,0,268,259,1,0,0,0,269,271,1,0,0,
	0,270,272,3,17,8,0,271,270,1,0,0,0,272,273,1,0,0,0,273,271,1,0,0,0,273,
	274,1,0,0,0,274,16,1,0,0,0,275,283,3,57,28,0,276,281,5,61,0,0,277,278,5,
	92,0,0,278,279,5,105,0,0,279,281,5,110,0,0,280,276,1,0,0,0,280,277,1,0,
	0,0,281,282,1,0,0,0,282,284,3,65,32,0,283,280,1,0,0,0,283,284,1,0,0,0,284,
	285,1,0,0,0,285,286,7,0,0,0,286,18,1,0,0,0,287,288,5,118,0,0,288,289,5,
	97,0,0,289,290,5,114,0,0,290,291,5,105,0,0,291,292,5,97,0,0,292,293,5,98,
	0,0,293,294,5,108,0,0,294,305,5,101,0,0,295,296,5,118,0,0,296,297,5,97,
	0,0,297,298,5,114,0,0,298,299,5,105,0,0,299,300,5,97,0,0,300,301,5,98,0,
	0,301,302,5,108,0,0,302,303,5,101,0,0,303,305,5,115,0,0,304,287,1,0,0,0,
	304,295,1,0,0,0,305,308,1,0,0,0,306,309,3,21,10,0,307,309,7,0,0,0,308,306,
	1,0,0,0,308,307,1,0,0,0,309,310,1,0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,
	311,20,1,0,0,0,312,315,3,57,28,0,313,314,5,61,0,0,314,316,3,65,32,0,315,
	313,1,0,0,0,315,316,1,0,0,0,316,22,1,0,0,0,317,318,5,98,0,0,318,319,5,101,
	0,0,319,320,5,103,0,0,320,321,5,105,0,0,321,322,5,110,0,0,322,324,1,0,0,
	0,323,325,3,25,12,0,324,323,1,0,0,0,325,326,1,0,0,0,326,324,1,0,0,0,326,
	327,1,0,0,0,327,24,1,0,0,0,328,329,3,63,31,0,329,331,5,58,0,0,330,332,7,
	1,0,0,331,330,1,0,0,0,331,332,1,0,0,0,332,334,1,0,0,0,333,328,1,0,0,0,333,
	334,1,0,0,0,334,335,1,0,0,0,335,336,3,27,13,0,336,26,1,0,0,0,337,351,3,
	29,14,0,338,351,3,33,16,0,339,351,3,35,17,0,340,351,3,37,18,0,341,351,3,
	39,19,0,342,351,3,41,20,0,343,351,3,43,21,0,344,351,3,45,22,0,345,351,3,
	47,23,0,346,351,3,49,24,0,347,351,3,51,25,0,348,351,3,53,26,0,349,351,3,
	55,27,0,350,337,1,0,0,0,350,338,1,0,0,0,350,339,1,0,0,0,350,340,1,0,0,0,
	350,341,1,0,0,0,350,342,1,0,0,0,350,343,1,0,0,0,350,344,1,0,0,0,350,345,
	1,0,0,0,350,346,1,0,0,0,350,347,1,0,0,0,350,348,1,0,0,0,350,349,1,0,0,0,
	351,28,1,0,0,0,352,353,3,31,15,0,353,354,5,58,0,0,354,355,5,61,0,0,355,
	356,1,0,0,0,356,368,3,65,32,0,357,358,5,124,0,0,358,359,5,124,0,0,359,360,
	1,0,0,0,360,361,3,31,15,0,361,362,5,58,0,0,362,363,5,61,0,0,363,364,1,0,
	0,0,364,365,3,65,32,0,365,367,1,0,0,0,366,357,1,0,0,0,367,370,1,0,0,0,368,
	366,1,0,0,0,368,369,1,0,0,0,369,371,1,0,0,0,370,368,1,0,0,0,371,372,5,59,
	0,0,372,30,1,0,0,0,373,389,3,57,28,0,374,375,5,91,0,0,375,380,3,65,32,0,
	376,377,5,44,0,0,377,379,3,65,32,0,378,376,1,0,0,0,379,382,1,0,0,0,380,
	378,1,0,0,0,380,381,1,0,0,0,381,383,1,0,0,0,382,380,1,0,0,0,383,384,5,93,
	0,0,384,388,1,0,0,0,385,386,5,46,0,0,386,388,3,59,29,0,387,374,1,0,0,0,
	387,385,1,0,0,0,388,391,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,390,32,
	1,0,0,0,391,389,1,0,0,0,392,393,5,105,0,0,393,394,5,102,0,0,394,395,1,0,
	0,0,395,396,3,65,32,0,396,397,5,116,0,0,397,398,5,104,0,0,398,399,5,101,
	0,0,399,400,5,110,0,0,400,402,1,0,0,0,401,403,3,25,12,0,402,401,1,0,0,0,
	403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,425,1,0,0,0,406,407,
	5,101,0,0,407,408,5,108,0,0,408,409,5,115,0,0,409,410,5,105,0,0,410,411,
	5,102,0,0,411,412,1,0,0,0,412,413,3,65,32,0,413,414,5,116,0,0,414,415,5,
	104,0,0,415,416,5,101,0,0,416,417,5,110,0,0,417,419,1,0,0,0,418,420,3,25,
	12,0,419,418,1,0,0,0,420,421,1,0,0,0,421,419,1,0,0,0,421,422,1,0,0,0,422,
	424,1,0,0,0,423,406,1,0,0,0,424,427,1,0,0,0,425,423,1,0,0,0,425,426,1,0,
	0,0,426,438,1,0,0,0,427,425,1,0,0,0,428,429,5,101,0,0,429,430,5,108,0,0,
	430,431,5,115,0,0,431,432,5,101,0,0,432,434,1,0,0,0,433,435,3,25,12,0,434,
	433,1,0,0,0,435,436,1,0,0,0,436,434,1,0,0,0,436,437,1,0,0,0,437,439,1,0,
	0,0,438,428,1,0,0,0,438,439,1,0,0,0,439,440,1,0,0,0,440,441,5,101,0,0,441,
	442,5,110,0,0,442,443,5,100,0,0,443,444,5,32,0,0,444,445,5,105,0,0,445,
	446,5,102,0,0,446,447,1,0,0,0,447,448,5,59,0,0,448,34,1,0,0,0,449,450,5,
	119,0,0,450,451,5,104,0,0,451,452,5,105,0,0,452,453,5,108,0,0,453,454,5,
	101,0,0,454,455,1,0,0,0,455,456,3,65,32,0,456,457,5,100,0,0,457,458,5,111,
	0,0,458,460,1,0,0,0,459,461,3,25,12,0,460,459,1,0,0,0,461,462,1,0,0,0,462,
	460,1,0,0,0,462,463,1,0,0,0,463,464,1,0,0,0,464,465,5,101,0,0,465,466,5,
	110,0,0,466,467,5,100,0,0,467,468,5,32,0,0,468,469,5,119,0,0,469,470,5,
	104,0,0,470,471,5,105,0,0,471,472,5,108,0,0,472,473,5,101,0,0,473,474,1,
	0,0,0,474,475,5,59,0,0,475,36,1,0,0,0,476,477,5,101,0,0,477,478,5,105,0,
	0,478,479,5,116,0,0,479,480,5,104,0,0,480,481,5,114,0,0,481,482,1,0,0,0,
	482,483,3,65,32,0,483,484,5,100,0,0,484,485,5,111,0,0,485,487,1,0,0,0,486,
	488,3,25,12,0,487,486,1,0,0,0,488,489,1,0,0,0,489,487,1,0,0,0,489,490,1,
	0,0,0,490,491,1,0,0,0,491,492,5,101,0,0,492,493,5,110,0,0,493,494,5,100,
	0,0,494,495,5,32,0,0,495,496,5,119,0,0,496,497,5,104,0,0,497,498,5,105,
	0,0,498,499,5,108,0,0,499,500,5,101,0,0,500,501,1,0,0,0,501,502,5,59,0,
	0,502,38,1,0,0,0,503,504,5,119,0,0,504,505,5,105,0,0,505,506,5,116,0,0,
	506,507,5,104,0,0,507,518,1,0,0,0,508,513,3,57,28,0,509,514,5,61,0,0,510,
	511,5,92,0,0,511,512,5,105,0,0,512,514,5,110,0,0,513,509,1,0,0,0,513,510,
	1,0,0,0,514,515,1,0,0,0,515,516,3,65,32,0,516,517,7,0,0,0,517,519,1,0,0,
	0,518,508,1,0,0,0,519,520,1,0,0,0,520,518,1,0,0,0,520,521,1,0,0,0,521,522,
	1,0,0,0,522,523,5,100,0,0,523,524,5,111,0,0,524,526,1,0,0,0,525,527,3,25,
	12,0,526,525,1,0,0,0,527,528,1,0,0,0,528,526,1,0,0,0,528,529,1,0,0,0,529,
	530,1,0,0,0,530,531,5,101,0,0,531,532,5,110,0,0,532,533,5,100,0,0,533,534,
	5,32,0,0,534,535,5,119,0,0,535,536,5,105,0,0,536,537,5,116,0,0,537,538,
	5,104,0,0,538,539,5,32,0,0,539,540,5,59,0,0,540,40,1,0,0,0,541,542,5,97,
	0,0,542,543,5,119,0,0,543,544,5,97,0,0,544,545,5,105,0,0,545,551,5,116,
	0,0,546,547,5,119,0,0,547,548,5,104,0,0,548,549,5,101,0,0,549,551,5,110,
	0,0,550,541,1,0,0,0,550,546,1,0,0,0,551,552,1,0,0,0,552,553,3,65,32,0,553,
	554,5,59,0,0,554,42,1,0,0,0,555,556,5,112,0,0,556,557,5,114,0,0,557,558,
	5,105,0,0,558,559,5,110,0,0,559,560,5,116,0,0,560,561,1,0,0,0,561,562,3,
	65,32,0,562,563,5,59,0,0,563,44,1,0,0,0,564,565,5,97,0,0,565,566,5,115,
	0,0,566,567,5,115,0,0,567,568,5,101,0,0,568,569,5,114,0,0,569,570,5,116,
	0,0,570,571,1,0,0,0,571,572,3,65,32,0,572,573,5,59,0,0,573,46,1,0,0,0,574,
	575,5,115,0,0,575,576,5,107,0,0,576,577,5,105,0,0,577,578,5,112,0,0,578,
	579,1,0,0,0,579,580,5,59,0,0,580,48,1,0,0,0,581,582,5,114,0,0,582,583,5,
	101,0,0,583,584,5,116,0,0,584,585,5,117,0,0,585,586,5,114,0,0,586,587,5,
	110,0,0,587,588,1,0,0,0,588,589,5,59,0,0,589,50,1,0,0,0,590,591,5,103,0,
	0,591,592,5,111,0,0,592,593,5,116,0,0,593,594,5,111,0,0,594,595,1,0,0,0,
	595,596,3,63,31,0,596,597,5,59,0,0,597,52,1,0,0,0,598,599,5,99,0,0,599,
	600,5,97,0,0,600,601,5,108,0,0,601,602,5,108,0,0,602,603,1,0,0,0,603,604,
	3,55,27,0,604,54,1,0,0,0,605,614,3,61,30,0,606,611,3,65,32,0,607,608,5,
	44,0,0,608,610,3,65,32,0,609,607,1,0,0,0,610,613,1,0,0,0,611,609,1,0,0,
	0,611,612,1,0,0,0,612,615,1,0,0,0,613,611,1,0,0,0,614,606,1,0,0,0,614,615,
	1,0,0,0,615,616,1,0,0,0,616,617,5,59,0,0,617,56,1,0,0,0,618,622,7,2,0,0,
	619,621,7,3,0,0,620,619,1,0,0,0,621,624,1,0,0,0,622,620,1,0,0,0,622,623,
	1,0,0,0,623,58,1,0,0,0,624,622,1,0,0,0,625,629,7,2,0,0,626,628,7,3,0,0,
	627,626,1,0,0,0,628,631,1,0,0,0,629,627,1,0,0,0,629,630,1,0,0,0,630,60,
	1,0,0,0,631,629,1,0,0,0,632,636,7,2,0,0,633,635,7,3,0,0,634,633,1,0,0,0,
	635,638,1,0,0,0,636,634,1,0,0,0,636,637,1,0,0,0,637,62,1,0,0,0,638,636,
	1,0,0,0,639,643,7,2,0,0,640,642,7,3,0,0,641,640,1,0,0,0,642,645,1,0,0,0,
	643,641,1,0,0,0,643,644,1,0,0,0,644,64,1,0,0,0,645,643,1,0,0,0,646,650,
	7,2,0,0,647,649,7,3,0,0,648,647,1,0,0,0,649,652,1,0,0,0,650,648,1,0,0,0,
	650,651,1,0,0,0,651,66,1,0,0,0,652,650,1,0,0,0,653,657,7,2,0,0,654,656,
	7,3,0,0,655,654,1,0,0,0,656,659,1,0,0,0,657,655,1,0,0,0,657,658,1,0,0,0,
	658,68,1,0,0,0,659,657,1,0,0,0,49,0,132,146,149,163,181,184,187,204,212,
	214,229,233,249,268,273,280,283,304,308,310,315,326,331,333,350,368,380,
	387,389,404,421,425,436,438,462,489,513,520,528,550,611,614,622,629,636,
	643,650,657,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PluscalLexer.__ATN) {
			PluscalLexer.__ATN = new ATNDeserializer().deserialize(PluscalLexer._serializedATN);
		}

		return PluscalLexer.__ATN;
	}


	static DecisionsToDFA = PluscalLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}